import React, { useState } from "react";
import Morpion from "../Morpion/Morpion";
import styles from "./Projets.module.css";
import { getImageUrl } from "../../utils";
import { useScrollAnimation } from "../../hooks/useScrollAnimation";

// Exemple de tableau de projets
const projects = [
  {
    id: 1,
    title: "Projet e-commerce",
    description: "Site de e-commerce avec paiement Stripe.",
    image: "ecommerce.png",
    details: "Le but du projet √©tait de r√©aliser un site de e-commerce de z√©ro. J'ai principalement travaill√© sur le formulaire de paiement avec Stripe. Application compl√®te avec gestion des produits, panier d'achat, syst√®me d'authentification et int√©gration de paiement s√©curis√©.",
    demoComponent: null,
    github: "https://github.com/rapappapapappapa/Projet-e-commerce",
    online: "https://github.com/rapappapapappapa/Projet-e-commerce"
  },
  {
    id: 2,
    title: "Twitter Clone",
    description: "Reproduction du site 'X' (anciennement Twitter).",
    image: "twitter.png",
    details: "Premier gros projet de groupe, nous avons d√©couvert la gestion de projet en √©quipe.",
    demoComponent: null,
    github: "https://github.com/...",
    online: null
  },
  {
    id: 3,
    title: "Morpion (Tic-Tac-Toe)",
    description: "Jeu de morpion r√©alis√© avec React.",
    image: "tic-tac-toe.png",
    details: "Tu peux jouer directement ici !",
    demoComponent: "Morpion",
    github: "https://github.com/...",
    online: null
  },
  {
    id: 4,
    title: "Syst√®me de Gestion de Cin√©ma",
    description: "Application web compl√®te pour la gestion d'un complexe cin√©matographique.",
    image: "paiment.png",
    details: "Syst√®me de gestion int√©gr√© comprenant la r√©servation de billets, la gestion des salles et des s√©ances, un syst√®me de paiement s√©curis√©, et un tableau de bord administrateur. D√©velopp√© avec React pour le frontend et Node.js/Express pour le backend, avec une base de donn√©es MongoDB. Interface utilisateur intuitive avec syst√®me de g√©olocalisation pour les cin√©mas.",
    demoComponent: null,
    github: "https://github.com/rapappapapappapa/cinema-management",
    online: "https://cinema-management-demo.vercel.app/"
  }
  // Ajoute d'autres projets ici
];

export const Projets = () => {
  const [sectionOpen, setSectionOpen] = useState(false);
  const [openProject, setOpenProject] = useState(null);
  const [sectionRef, isSectionVisible] = useScrollAnimation(0.2);

  const handleToggleProject = (id) => {
    setOpenProject(openProject === id ? null : id);
  };

  const launchEcommerce = () => {
    // Ouvre une nouvelle fen√™tre avec les instructions pour lancer le projet
    const instructions = `
üöÄ Pour lancer le projet e-commerce :

1. Ouvrez un terminal
2. Naviguez vers le projet : cd ~/Projet-e-commerce/ecommerce
3. Lancez le backend : cd back && php -S localhost:8000
4. Ouvrez un autre terminal
5. Lancez le frontend : cd front && npm run dev
6. Ouvrez http://localhost:5173 dans votre navigateur

Ou cliquez sur le lien GitHub pour voir le code source !
    `;
    
    alert(instructions);
    // Ouvre aussi le README du projet
    window.open('https://github.com/rapappapapappapa/Projet-e-commerce', '_blank');
  };

  return (
    <section className={`${styles.container} ${styles.scrollReveal} ${isSectionVisible ? styles.visible : ''}`} ref={sectionRef}>
      <button
        className={styles.toggleSectionBtn}
        onClick={() => setSectionOpen(!sectionOpen)}
      >
        {sectionOpen ? "Cacher les projets" : "Voir mes projets"}
      </button>

      {sectionOpen && (
        <div className={styles.projectsList}>
          {projects.map((project) => (
            <div
              key={project.id}
              className={`${styles.projectCard} ${styles.projectCardReveal} ${isSectionVisible ? styles.visible : ''} ${openProject === project.id ? styles.open : ""}`}
            >
              <div
                className={styles.projectHeader}
                onClick={() => handleToggleProject(project.id)}
                style={{ cursor: "pointer" }}
              >
                <img
                  src={getImageUrl(project.image)}
                  alt={project.title}
                  className={styles.projectImage}
                />
                <div>
                  <h3>{project.title}</h3>
                  <p>{project.description}</p>
                </div>
                <span className={styles.arrow}>
                  {openProject === project.id ? "‚ñ≤" : "‚ñº"}
                </span>
              </div>
              {openProject === project.id && (
                <div className={styles.projectDetails}>
                  <p>{project.details}</p>
                  {project.demoComponent === "Morpion" && <Morpion />}
                  <div className={styles.projectLinks}>
                    {project.github && (
                      <a href={project.github} target="_blank" rel="noopener noreferrer">
                        üìÅ Voir le code GitHub
                      </a>
                    )}
                    {project.online && project.id === 1 ? (
                      <button 
                        onClick={launchEcommerce}
                        className={styles.launchBtn}
                      >
                        üöÄ Lancer le projet
                      </button>
                    ) : project.online ? (
                      <a href={project.online} target="_blank" rel="noopener noreferrer">
                        üåê Voir le projet en ligne
                      </a>
                    ) : null}
                  </div>
                </div>
              )}
            </div>
          ))}
        </div>
      )}
    </section>
  );
};
